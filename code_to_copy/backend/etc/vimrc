" color evening
" colo else
" colo torte

"make the coding ok
set encoding=utf-8
set fencs=ucs-bom,utf-8,euc-cn,cp936,gb18030,latin1 " fileencodings
 source $VIMRUNTIME/delmenu.vim

" source $VIMRUNTIME/menu.vim
" language messages zh_CN.utf-8
" set nocp " 更远离vi,接近人类...
set wildmenu  " tab的时候会显示哪些可选项
set wildignore+=*.o,*.obj,*.pyc


" XXX 需要安装插件
call pathogen#infect() 


" BEGIN color  XXX 需要安装插件
" colo koehler
syntax enable        
" let g:solarized_termcolors=256
let g:solarized_termtrans=1
let g:solarized_visibility="low"
set background=dark  
colorscheme solarized
" END color


set hlsearch
set lbr " set linebreak
set laststatus=2
set statusline=%<%f\%h%m%r%=%-20.(line=%l\ \ col=%c%V\ \ totlin=%L%)\ \ \%h%m%r%=%-40(bytval=0x%B,%n%Y%)\%P

" set fdm=marker
" set fdm=syntax


set ai "auto indent
" set cindent
" set list "show the control charactor
set sm "show match
set expandtab 
set tabstop=4
set shiftwidth=4
set number
set ignorecase
set smartcase
" set ignorecase
"map th :tabpre<cr>  "gT
"map tl :tabnext<cr> "gt
"map tc :tabclose<cr>
map tn :tabnew<cr>
map tm :tabmove 

" XXX vim7.3 only
set cc=120
highlight ColorColumn ctermbg=Cyan


map <C-p> "0p

" buffers
map <C-j> :bnext<CR>
map <C-k> :bNext<CR>
map gb :buffers<CR>


" let g:neocomplcache_enable_at_startup = 1
syntax on
set nocompatible
filetype plugin on 




" 十六进制编辑功能 :call Hexedit()
func! Hexedit()
    exec ":% !xxd"
endfunc
func! HexeditRevert()
    exec ":% !xxd -r"
endfunc



map <F9>p :call CompilePython()<cr>
func! CompilePython()
    exec "w"
    exec "!echo -e '\033[1;34m-----------here\ is\ the\ ans\ of\ %----------\033[0m';python %"
endfunc

map <F9>s :call RunShell()<cr>
func! RunShell()
    exec "w"
    exec "!echo -e '\033[1;34m-----------here\ is\ the\ ans\ of\ %----------\033[0m';bash %"
endfunc

map <F9>c :call CompileRunGpp()<CR>
func! CompileRunGpp()
    exec "w"
    exec "!echo -e '\033[1;32mcompiling.....\033[0m';gcc % -o %:r.exe;echo -e '\033[1;34m-----------here_is_the_ans_of_%----------\033[0m';./%:r.exe;echo -e '\033[1;33mend...\033[0m';rm %:r.exe"
    "exec "!./%:r.exe"
endfunc

map <F9>j :call CompileRunGpp()<CR>
func! CompileRunGpp()
    exec "w"
    exec "!echo -e '\033[1;32mcompiling.....\033[0m';javac %;echo -e '\033[1;34m-----------here_is_the_ans_of_%----------\033[0m';java %:r;echo -e '\033[1;33mend...\033[0m';rm %:r.class"
endfunc

" bundle 里的这些插件
" 源于 http://python.42qu.com/11180003







"
"  
"
"
" The plugins I always need
"


"
" Pathogen http://www.vim.org/scripts/script.php?script_id=2332
"   mkdir -p ~/.vim/bundle
"


"
" command-T http://www.vim.org/scripts/script.php?script_id=3025
"   :ruby 1  or  +ruby
"   sudo apt-get install ruby ruby-mkrf ruby-dev
"   Do what the page tell you !!!!
"
let g:CommandTWildIgnore=&wildignore . ",*.o,*.obj,.git,*.pyc,*/migrations/*,django,*static/plugins/*"
map <leader>f :CommandTFlush<CR>



"
" vimwiki http://www.vim.org/scripts/script.php?script_id=2226
"
" map tb :VimwikiTable 
map t<space> <Plug>VimwikiToggleListItem
let g:vimwiki_hl_headers = 1
" let g:vimwiki_conceallevel = 0


"
" Nerdtree http://www.vim.org/scripts/script.php?script_id=1658
"
nnoremap <silent> <F7> :NERDTreeToggle<CR>
let NERDTreeIgnore=['\.pyc$', '\.orig$', '\.pyo$']


"
" Tagbar http://www.vim.org/scripts/script.php?script_id=3465
"
" nnoremap <silent> <F8> :TlistToggle<CR>
nnoremap <silent> <F8> :TagbarToggle<CR>


"
" vim-flake8 , PyFlakes to find static programming errors and  PEP8 ...
"   git clone https://github.com/nvie/vim-flake8 ~/.vim/bundle/
"   sudo apt-get install python-flake8
let g:no_flake8_maps=1
autocmd BufWritePost *.py call Flake8() " XXX 这个功能需要安装插件
let g:flake8_max_line_length=120
" 针对项目随时修改
let g:flake8_ignore="F401,E128"


"
" matchit http://www.vim.org/scripts/script.php?script_id=39
"
